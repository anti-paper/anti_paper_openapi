openapi: "3.0.0"
info:
  title: 情報管理システム
  version: 1.0.0
servers:
  - url: "http://localhost:8002"
tags:
  - name: sample
    description: サンプルだにょん
  - name: task
    description: タスク管理
  - name: schedule
    description: スケジュール管理
  - name: trash-throw-away
    description: ゴミ捨て管理
  - name: trash-take-out
    description: ゴミ出し管理
  - name: shopping-list
    description: 買い物管理
  - name: payment-method
    description: 支払い方法管理
  - name: balance
    description: 収支管理
  - name: product
    description: 商品管理
  - name: shop
    description: 販売店舗管理
  - name: muscle
    description: 筋トレ管理
  - name: data
    description: データ管理
paths:
  /sample/{id}:
    get:
      description: サンプル説明
      tags:
        - sample
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        201:
          description: 正常系
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sample"
        default:
          description: 異常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Other"
  /task/make:
    post:
      description: タスクを新規に登録する
      tags:
        - task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTask"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTask"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /tasks:
    get:
      description: アクティブなタスクを取得する
      tags:
        - task
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTasks"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/detail:
    get:
      description: 指定したタスクを取得する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTask"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/update-status:
    patch:
      description: タスクのステータスを更新する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdatingTaskStatus"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDoneTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutIsDone"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/update:
    put:
      description: タスクを更新する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTask"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/delete:
    delete:
      description: タスクを削除する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeletedTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /schedule/make:
    post:
      description: スケジュールを新規に登録する
      tags:
        - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchedule"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSchedule"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /schedules:
    get:
      description: アクティブなスケジュールを取得する
      tags:
        - schedule
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSchedules"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /schedule/{id}/detail:
    get:
      description: 指定したスケジュールを取得する
      tags:
        - schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSchedule"
        404:
          description: 異常系（スケジュールなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /schedule/{id}/update:
    put:
      description: スケジュールを更新する
      tags:
        - schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestSchedule"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseSchedule"
        404:
          description: 異常系（スケジュールなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /schedule/{id}/delete:
    delete:
      description: スケジュールを削除する
      tags:
        - schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeletedSchedule"
        404:
          description: 異常系（スケジュールなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-throw-away/make:
    post:
      description: ゴミ捨て情報を新規に登録する
      tags:
        - trash-throw-away
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTrashThrowAway"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashThrowAway"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-throw-aways:
    get:
      description: アクティブなゴミ捨て情報を取得する
      tags:
        - trash-throw-away
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashThrowAways"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-throw-away/{id}/detail:
    get:
      description: 指定したゴミ捨て情報を取得する
      tags:
        - trash-throw-away
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashThrowAway"
        404:
          description: 異常系（ゴミ捨て情報なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-throw-away/{id}/update:
    put:
      description: ゴミ捨て情報を更新する
      tags:
        - trash-throw-away
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTrashThrowAway"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashThrowAway"
        404:
          description: 異常系（ゴミ捨て情報なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-throw-away/{id}/delete:
    delete:
      description: ゴミ捨て情報を削除する
      tags:
        - trash-throw-away
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeletedTrashThrowAway"
        404:
          description: 異常系（ゴミ捨て情報なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-out/make:
    post:
      description: 1件のゴミ出し可能日を新規に登録する
      tags:
        - trash-take-out
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTrashTakeOut"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashTakeOut"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutTrashDay"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-outs/make:
    post:
      description: 複数件のゴミ出し可能日を新規に登録する
      tags:
        - trash-take-out
      requestBody:
        content:
          text/csv:
            schema:
              $ref: "#/components/schemas/RequestTrashTakeOuts"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashTakeOuts"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutTrashDay"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-outs:
    get:
      description: アクティブなゴミ出し可能日を取得する
      tags:
        - trash-take-out
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashTakeOuts"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-out/{id}/detail:
    get:
      description: 指定したゴミ出し可能日を取得する
      tags:
        - trash-take-out
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashTakeOut"
        404:
          description: 異常系（ゴミ出し可能日なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-out/{id}/update:
    put:
      description: ゴミ出し可能日を更新する
      tags:
        - trash-take-out
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTrashTakeOut"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTrashTakeOut"
        404:
          description: 異常系（ゴミ出し可能日なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutTrashDay"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /trash-take-out/{id}/delete:
    delete:
      description: ゴミ出し可能日を削除する
      tags:
        - trash-take-out
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeletedTrashTakeOut"
        404:
          description: 異常系（ゴミ出し可能日なし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
components:
  schemas:
    Sample:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int32
          example: 100
        name:
          type: string
          example: anti-paper
        status:
          type: string
          description: 状態
          enum:
            - 有効
            - 非有効
    NewTask:
      type: object
      required:
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    OneTask:
      type: object
      required:
        - id
        - name
        - content
        - tag
        - is_done
        - updated_at
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
        updated_at:
          type: string
          example: 2024-01-01
    Tasks:
      type: array
      items:
        type: object
        $ref: "#/components/schemas/OneTask"
      example:
        - id: 1
          name: task1
          content: description1
          tag: 0
          is_done: 0
          updated_at: 2024-01-01
        - id: 2
          name: task2
          content: description2
          tag: 1
          is_done: 1
          updated_at: 2025-06-15
        - id: 3
          name: task3
          content: description3
          tag: 2
          is_done: 0
          updated_at: 2026-12-31
    DoneTask:
      type: object
      required:
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    DeletedTask:
      type: object
      required:
        - id
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
    NewSchedule:
      type: object
      required:
        - name
        - content
        - tag
        - month
        - week_day
        - start_date
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: schedule3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:ゴミ出し,2:筋トレ"
          enum:
            - 0
            - 1
            - 2
        frequency:
          type: integer
          format: int32
          description: "0:日次 1:週次 2:月次 3:年次"
          enum:
            - 0
            - 1
            - 2
            - 3
        month:
          type: integer
          format: int32
          description: "年次を選択した場合に使用する"
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
        day:
          type: integer
          format: int32
          description: "月次・年次を選択した場合に使用する"
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
        week_day:
          type: integer
          format: int32
          description: "週次を選択した場合に使用する 0:日 1:月 2:火 3:水 4:木 5:金 6:土"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        start_date:
          type: string
          example: 2024-01-01
        end_date:
          type: string
          example: 2026-12-31
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    OneSchedule:
      type: object
      required:
        - id
        - name
        - content
        - tag
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: schedule3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:ゴミ出し,2:筋トレ"
          enum:
            - 0
            - 1
            - 2
    Schedules:
      type: array
      items:
        type: object
        $ref: "#/components/schemas/OneSchedule"
      example:
        - id: 1
          name: schedule1
          content: description1
          tag: 0
        - id: 2
          name: schedule2
          content: description2
          tag: 1
        - id: 3
          name: schedule3
          content: description3
          tag: 2
    DeletedSchedule:
      type: object
      required:
        - id
        - name
        - content
        - tag
        - month
        - week_day
        - start_date
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: schedule3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:ゴミ出し,2:筋トレ"
          enum:
            - 0
            - 1
            - 2
        frequency:
          type: integer
          format: int32
          description: "0:日次 1:週次 2:月次 3:年次"
          enum:
            - 0
            - 1
            - 2
            - 3
        month:
          type: integer
          format: int32
          description: "年次を選択した場合に使用する"
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
        day:
          type: integer
          format: int32
          description: "月次・年次を選択した場合に使用する"
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
        week_day:
          type: integer
          format: int32
          description: "週次を選択した場合に使用する 0:日 1:月 2:火 3:水 4:木 5:金 6:土"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        start_date:
          type: string
          example: 2024-01-01
        end_date:
          type: string
          example: 2026-12-31
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
    NewTrashThrowAway:
      type: object
      required:
        - id
        - name
        - method
        - example
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: trash-throw-away3
        method:
          type: string
          example: method3
        example:
          type: string
          example: example3
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    OneTrashThrowAway:
      type: object
      required:
        - id
        - name
        - method
        - example
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: trash-throw-away3
        method:
          type: string
          example: method3
        example:
          type: string
          example: example3
    TrashThrowAways:
      type: array
      items:
        type: object
        $ref: "#/components/schemas/OneTrashThrowAway"
      example:
        - id: 1
          name: trash-throw-away1
          method: method1
          example: example1
        - id: 2
          name: trash-throw-away2
          method: method2
          example: example2
        - id: 3
          name: trash-throw-away3
          method: method3
          example: example3
    DeletedTrashThrowAway:
      type: object
      required:
        - id
        - name
        - method
        - example
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: trash-throw-away3
        method:
          type: string
          example: method3
        example:
          type: string
          example: example3
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
    NewTrashTakeOut:
      type: object
      required:
        - id
        - trash_day
        - trashes
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        trash_day:
          type: string
          example: "2025-01-31 00:00:00"
        trashes:
          type: array
          items:
            $ref: "#/components/schemas/OneTrashThrowAway"
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    OneTrashTakeOut:
      type: object
      required:
        - id
        - trash_day
        - trashes
      properties:
        id:
          type: integer
          format: int32
          example: 3
        trash_day:
          type: string
          example: "2025-01-31 00:00:00"
        trashes:
          type: array
          items:
            $ref: "#/components/schemas/OneTrashThrowAway"
    TrashTakeOuts:
      type: array
      items:
        type: object
        $ref: "#/components/schemas/OneTrashTakeOut"
      example:
        - id: 1
          trash_day: "2024-12-31 00:00:00"
          trashes:
            - id: 1
              name: trash-throw-away1
              method: method1
              example: example1
        - id: 2
          trash_day: "2025-01-01 00:00:00"
          trashes:
            - id: 1
              name: trash-throw-away1
              method: method1
              example: example1
            - id: 2
              name: trash-throw-away2
              method: method2
              example: example2
    DeletedTrashTakeOut:
      type: object
      required:
        - id
        - trash_day
        - trashes
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        trash_day:
          type: string
          example: "2025-01-31 00:00:00"
        trashes:
          type: array
          items:
            $ref: "#/components/schemas/OneTrashThrowAway"
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
    RequestTask:
      type: object
      required:
        - name
        - content
        - tag
      properties:
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
    RequestUpdatingTaskStatus:
      type: object
      required:
        - is_done
      properties:
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    RequestSchedule:
      type: object
      required:
        - name
        - content
        - frequency
        - start_date
      properties:
        name:
          type: string
          example: schedule3
        content:
          type: string
          example: description3
        frequency:
          type: integer
          format: int32
          description: "0:日次 1:週次 2:月次 3:年次"
          enum:
            - 0
            - 1
            - 2
            - 3
        start_date:
          type: string
          example: 2024-01-01
        end_date:
          type: string
          example: 2026-12-31
    RequestTrashThrowAway:
      type: object
      required:
        - name
        - method
        - example
      properties:
        name:
          type: string
          example: tash-throw-away3
        method:
          type: string
          example: method3
        example:
          type: string
          example: example3
    RequestTrashTakeOut:
      type: object
      required:
        - trash_day
        - trash_ids
      properties:
        trash_day:
          type: string
          description: ゴミ出し可能日
          example: "2025-01-31 00:00:00"
        trash_ids:
          type: array
          items:
            type: integer
            format: int32
            example: 3
    RequestTrashTakeOuts:
      type: string
      example: "trash_day,trash_id,trash_day_id\n2024-12-31 00:00:00,1,1\n2025-01-31 00:00:00,1,2\n2025-01-31 00:00:00,2,2"
    ResponseTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/NewTask"
    ResponseDoneTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/DoneTask"
    ResponseDeletedTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/DeletedTask"
    ResponseTasks:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/Tasks"
    ResponseSchedule:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/NewSchedule"
    ResponseDeletedSchedule:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/DeletedSchedule"
    ResponseSchedules:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/Schedules"
    ResponseTrashThrowAway:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/NewTrashThrowAway"
    ResponseDeletedTrashThrowAway:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/DeletedTrashThrowAway"
    ResponseTrashThrowAways:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/TrashThrowAways"
    ResponseTrashTakeOut:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/NewTrashTakeOut"
    ResponseDeletedTrashTakeOut:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/DeletedTrashTakeOut"
    ResponseTrashTakeOuts:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          $ref: "#/components/schemas/TrashTakeOuts"
    Other:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: "Not found."
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: コンテンツがありません。
    UnprocessableEntityAboutName:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 422
        message:
          type: string
          example: "'name'は必須項目です。"
    UnprocessableEntityAboutIsDone:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 422
        message:
          type: string
          example: "'is_done'は必須項目です。"
    UnprocessableEntityAboutTrashDay:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 422
        message:
          type: string
          example: "'trash_day'は必須項目です。"
    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: 予期せぬエラーが発生しました。
