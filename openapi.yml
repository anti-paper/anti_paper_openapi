openapi: "3.1.0"
info:
  title: 情報管理システム
  version: 1.0.0
servers:
  - url: "http://localhost:8001"
tags:
  - name: sample
    description: サンプルだにょん
  - name: task
    description: タスク管理
  - name: schedule
    description: スケジュール管理
  - name: trash-throw-away
    description: ゴミ捨て管理
  - name: trash-take-out
    description: ゴミ出し管理
  - name: shopping-list
    description: 買い物管理
  - name: payment-method
    description: 支払い方法管理
  - name: balance
    description: 収支管理
  - name: product
    description: 商品管理
  - name: shop
    description: 販売店舗管理
  - name: muscle
    description: 筋トレ管理
  - name: data
    description: データ管理
paths:
  /sample/{id}:
    get:
      description: サンプル説明
      tags:
        - sample
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        201:
          description: 正常系
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sample"
        default:
          description: 異常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Other"
  /task/make:
    post:
      description: タスクを新規に登録する
      tags:
        - task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTask"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTask"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /tasks:
    get:
      description: アクティブなタスクを確認する
      tags:
        - task
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTasks"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/update-status:
    post:
      description: タスクのステータスを更新する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestUpdatingTaskStatus"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDoneTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutIsDone"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/update:
    post:
      description: タスクを更新する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestTask"
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        422:
          description: 異常系（バリデーションエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityAboutName"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
  /task/{id}/delete:
    post:
      description: タスクを削除する
      tags:
        - task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 3
      responses:
        200:
          description: 正常系
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDeletedTask"
        404:
          description: 異常系（タスクなし）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        500:
          description: 異常系（予期せぬエラー）
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
components:
  schemas:
    Sample:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 100
        name:
          type: string
          example: anti-paper
        status:
          type: string
          description: 状態
          enum:
            - 有効
            - 非有効
    NewTask:
      type: object
      required:
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    DoneTask:
      type: object
      required:
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    DeletedTask:
      type: object
      required:
        - name
        - content
        - tag
        - is_done
        - is_deleted
      properties:
        id:
          type: integer
          format: int32
          example: 3
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
        is_deleted:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
          example: 1
    RequestTask:
      type: object
      required:
        - name
        - content
        - tag
      properties:
        name:
          type: string
          example: task3
        content:
          type: string
          example: description3
        tag:
          type: integer
          format: int32
          description: "0:通常,1:買い物,2:スケジュール,3:ゴミ出し,4:筋トレ"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
    RequestUpdatingTaskStatus:
      type: object
      required:
        - is_done
      properties:
        is_done:
          type: integer
          format: int32
          description: "0:FALSE,1:TRUE"
          enum:
            - 0
            - 1
    ResponseTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          type: object
          $ref: "#/components/schemas/NewTask"
    ResponseDoneTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          type: object
          $ref: "#/components/schemas/DoneTask"
    ResponseDeletedTask:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          type: object
          $ref: "#/components/schemas/DeletedTask"
    ResponseTasks:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        data:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/NewTask"
          example:
            - id: 1
              name: task1
              content: description1
              tag: 0
              is_done: 0
            - id: 2
              name: task2
              content: description2
              tag: 1
              is_done: 1
            - id: 3
              name: task3
              content: description3
              tag: 2
              is_done: 0
    Other:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: "Not found."
    NotFound:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: コンテンツがありません。
    UnprocessableEntityAboutName:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 422
        message:
          type: string
          example: "'name'は必須項目です。"
    UnprocessableEntityAboutIsDone:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 422
        message:
          type: string
          example: "'is_done'は必須項目です。"
    InternalServerError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: 予期せぬエラーが発生しました。
